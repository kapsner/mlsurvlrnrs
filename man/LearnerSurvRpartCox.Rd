% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/learner_surv_rpart_cox.R
\name{LearnerSurvRpartCox}
\alias{LearnerSurvRpartCox}
\title{LearnerSurvRpartCox R6 class}
\description{
This learner is a wrapper around [rpart::rpart()] in order to fit recursive
  partitioning and regression trees with survival data.
}
\details{
Optimization metric: C-index
*
Can be used with
* [mlexperiments::MLTuneParameters]
* [mlexperiments::MLCrossValidation]
* [mlexperiments::MLNestedCV]

Implemented methods:
* `$fit` To fit the model.
* `$predict` To predict new data with the model.
* `$cross_validation` To perform a grid search (hyperparameter
  optimization).
* `$bayesian_scoring_function` To perform a Bayesian hyperparameter
  optimization.

Parameters that are specified with `parameter_grid` and / or `learner_args`
  are forwarded to `rpart`'s argument `control` (see
  [rpart::rpart.control()] for further details).
}
\examples{
LearnerSurvRpartCox$new()


## ------------------------------------------------
## Method `LearnerSurvRpartCox$new`
## ------------------------------------------------

LearnerSurvRpartCox$new()

}
\seealso{
[rpart::rpart()], [c_index()],
  [rpart::rpart.control()]

[rpart::rpart()], [c_index()],
}
\section{Super class}{
\code{\link[mlexperiments:MLLearnerBase]{mlexperiments::MLLearnerBase}} -> \code{LearnerSurvRpartCox}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-LearnerSurvRpartCox-new}{\code{LearnerSurvRpartCox$new()}}
\item \href{#method-LearnerSurvRpartCox-clone}{\code{LearnerSurvRpartCox$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="mlexperiments" data-topic="MLLearnerBase" data-id="bayesian_scoring_function"><a href='../../mlexperiments/html/MLLearnerBase.html#method-MLLearnerBase-bayesian_scoring_function'><code>mlexperiments::MLLearnerBase$bayesian_scoring_function()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlexperiments" data-topic="MLLearnerBase" data-id="cross_validation"><a href='../../mlexperiments/html/MLLearnerBase.html#method-MLLearnerBase-cross_validation'><code>mlexperiments::MLLearnerBase$cross_validation()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlexperiments" data-topic="MLLearnerBase" data-id="fit"><a href='../../mlexperiments/html/MLLearnerBase.html#method-MLLearnerBase-fit'><code>mlexperiments::MLLearnerBase$fit()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlexperiments" data-topic="MLLearnerBase" data-id="predict"><a href='../../mlexperiments/html/MLLearnerBase.html#method-MLLearnerBase-predict'><code>mlexperiments::MLLearnerBase$predict()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LearnerSurvRpartCox-new"></a>}}
\if{latex}{\out{\hypertarget{method-LearnerSurvRpartCox-new}{}}}
\subsection{Method \code{new()}}{
Create a new `LearnerSurvRpartCox` object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LearnerSurvRpartCox$new()}\if{html}{\out{</div>}}
}

\subsection{Details}{
This learner is a wrapper around [rpart::rpart()] in order to fit
  recursive partitioning and regression trees with survival data.
}

\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{LearnerSurvRpartCox$new()

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LearnerSurvRpartCox-clone"></a>}}
\if{latex}{\out{\hypertarget{method-LearnerSurvRpartCox-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LearnerSurvRpartCox$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
